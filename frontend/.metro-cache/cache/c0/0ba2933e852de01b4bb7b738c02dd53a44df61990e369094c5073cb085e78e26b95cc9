{"dependencies":[{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":66,"index":66}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"./ExpoHaptics","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":68},"end":{"line":3,"column":40,"index":108}}],"key":"3WqQQRS5WG7zFWoPm3OZ82Alno4=","exportNames":["*"],"imports":1}},{"name":"./Haptics.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":109},"end":{"line":4,"column":96,"index":205}}],"key":"4K2GreqvhWei0+qUJVORf63x8ww=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.notificationAsync = notificationAsync;\n  exports.impactAsync = impactAsync;\n  exports.selectionAsync = selectionAsync;\n  exports.performAndroidHapticsAsync = performAndroidHapticsAsync;\n  Object.defineProperty(exports, \"NotificationFeedbackType\", {\n    enumerable: true,\n    get: function () {\n      return _HapticsTypes.NotificationFeedbackType;\n    }\n  });\n  Object.defineProperty(exports, \"ImpactFeedbackStyle\", {\n    enumerable: true,\n    get: function () {\n      return _HapticsTypes.ImpactFeedbackStyle;\n    }\n  });\n  Object.defineProperty(exports, \"AndroidHaptics\", {\n    enumerable: true,\n    get: function () {\n      return _HapticsTypes.AndroidHaptics;\n    }\n  });\n  var _expoModulesCore = require(_dependencyMap[0], \"expo-modules-core\");\n  var _ExpoHaptics = require(_dependencyMap[1], \"./ExpoHaptics\");\n  var ExpoHaptics = _interopDefault(_ExpoHaptics);\n  var _HapticsTypes = require(_dependencyMap[2], \"./Haptics.types\");\n  // @needsAudit\n  /**\n   * The kind of notification response used in the feedback.\n   * @param type A notification feedback type that on Android is simulated using [`Vibrator`](https://developer.android.com/reference/android/os/Vibrator)\n   * and iOS is directly mapped to [`UINotificationFeedbackType`](https://developer.apple.com/documentation/uikit/uinotificationfeedbacktype).\n   * You can use one of `Haptics.NotificationFeedbackType.{Success, Warning, Error}`.\n   * @return A `Promise` which fulfils once native size haptics functionality is triggered.\n   */\n  async function notificationAsync(type = _HapticsTypes.NotificationFeedbackType.Success) {\n    if (!ExpoHaptics.default?.notificationAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Haptics', 'notificationAsync');\n    }\n    await ExpoHaptics.default.notificationAsync(type);\n  }\n\n  // @needsAudit\n  /**\n   * @param style A collision indicator that on Android is simulated using [`Vibrator`](https://developer.android.com/reference/android/os/Vibrator)\n   * and on iOS, it is directly mapped to [`UIImpactFeedbackStyle`](https://developer.apple.com/documentation/uikit/uiimpactfeedbackgenerator/feedbackstyle).\n   * You can use one of `Haptics.ImpactFeedbackStyle.{Light, Medium, Heavy, Rigid, Soft}`.\n   * @return A `Promise` which fulfils once native size haptics functionality is triggered.\n   */\n  async function impactAsync(style = _HapticsTypes.ImpactFeedbackStyle.Medium) {\n    if (!ExpoHaptics.default?.impactAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Haptic', 'impactAsync');\n    }\n    await ExpoHaptics.default.impactAsync(style);\n  }\n\n  // @needsAudit\n  /**\n   * Used to let a user know when a selection change has been registered.\n   * @return A `Promise` which fulfils once native size haptics functionality is triggered.\n   */\n  async function selectionAsync() {\n    if (!ExpoHaptics.default?.selectionAsync) {\n      throw new _expoModulesCore.UnavailabilityError('Haptic', 'selectionAsync');\n    }\n    await ExpoHaptics.default.selectionAsync();\n  }\n\n  /**\n   * Use the device haptics engine to provide physical feedback to the user.\n   *\n   * @platform android\n   */\n  async function performAndroidHapticsAsync(type) {\n    if (_expoModulesCore.Platform.OS !== 'android') {\n      return;\n    }\n    ExpoHaptics.default.performHapticsAsync(type);\n  }\n});","lineCount":90,"map":[[12,2,14,0,"exports"],[12,9,14,0],[12,10,14,0,"notificationAsync"],[12,27,14,0],[12,30,14,0,"notificationAsync"],[12,47,14,0],[13,2,30,0,"exports"],[13,9,30,0],[13,10,30,0,"impactAsync"],[13,21,30,0],[13,24,30,0,"impactAsync"],[13,35,30,0],[14,2,44,0,"exports"],[14,9,44,0],[14,10,44,0,"selectionAsync"],[14,24,44,0],[14,27,44,0,"selectionAsync"],[14,41,44,0],[15,2,56,0,"exports"],[15,9,56,0],[15,10,56,0,"performAndroidHapticsAsync"],[15,36,56,0],[15,39,56,0,"performAndroidHapticsAsync"],[15,65,56,0],[16,2,63,0,"Object"],[16,8,63,0],[16,9,63,0,"defineProperty"],[16,23,63,0],[16,24,63,0,"exports"],[16,31,63,0],[17,4,63,0,"enumerable"],[17,14,63,0],[18,4,63,0,"get"],[18,7,63,0],[18,18,63,0,"get"],[18,19,63,0],[19,6,63,0],[19,13,63,9,"NotificationFeedbackType"],[19,26,63,33],[19,27,63,33,"NotificationFeedbackType"],[19,51,63,33],[20,4,63,33],[21,2,63,33],[22,2,63,0,"Object"],[22,8,63,0],[22,9,63,0,"defineProperty"],[22,23,63,0],[22,24,63,0,"exports"],[22,31,63,0],[23,4,63,0,"enumerable"],[23,14,63,0],[24,4,63,0,"get"],[24,7,63,0],[24,18,63,0,"get"],[24,19,63,0],[25,6,63,0],[25,13,63,35,"ImpactFeedbackStyle"],[25,26,63,54],[25,27,63,54,"ImpactFeedbackStyle"],[25,46,63,54],[26,4,63,54],[27,2,63,54],[28,2,63,0,"Object"],[28,8,63,0],[28,9,63,0,"defineProperty"],[28,23,63,0],[28,24,63,0,"exports"],[28,31,63,0],[29,4,63,0,"enumerable"],[29,14,63,0],[30,4,63,0,"get"],[30,7,63,0],[30,18,63,0,"get"],[30,19,63,0],[31,6,63,0],[31,13,63,56,"AndroidHaptics"],[31,26,63,70],[31,27,63,70,"AndroidHaptics"],[31,41,63,70],[32,4,63,70],[33,2,63,70],[34,2,1,0],[34,6,1,0,"_expoModulesCore"],[34,22,1,0],[34,25,1,0,"require"],[34,32,1,0],[34,33,1,0,"_dependencyMap"],[34,47,1,0],[35,2,3,0],[35,6,3,0,"_ExpoHaptics"],[35,18,3,0],[35,21,3,0,"require"],[35,28,3,0],[35,29,3,0,"_dependencyMap"],[35,43,3,0],[36,2,3,0],[36,6,3,0,"ExpoHaptics"],[36,17,3,0],[36,20,3,0,"_interopDefault"],[36,35,3,0],[36,36,3,0,"_ExpoHaptics"],[36,48,3,0],[37,2,4,0],[37,6,4,0,"_HapticsTypes"],[37,19,4,0],[37,22,4,0,"require"],[37,29,4,0],[37,30,4,0,"_dependencyMap"],[37,44,4,0],[38,2,6,0],[39,2,7,0],[40,0,8,0],[41,0,9,0],[42,0,10,0],[43,0,11,0],[44,0,12,0],[45,0,13,0],[46,2,14,7],[46,17,14,22,"notificationAsync"],[46,34,14,39,"notificationAsync"],[46,35,15,2,"type"],[46,39,15,32],[46,42,15,35,"NotificationFeedbackType"],[46,55,15,59],[46,56,15,59,"NotificationFeedbackType"],[46,80,15,59],[46,81,15,60,"Success"],[46,88,15,67],[46,90,16,17],[47,4,17,2],[47,8,17,6],[47,9,17,7,"ExpoHaptics"],[47,20,17,18],[47,21,17,18,"default"],[47,28,17,18],[47,30,17,20,"notificationAsync"],[47,47,17,37],[47,49,17,39],[48,6,18,4],[48,12,18,10],[48,16,18,14,"UnavailabilityError"],[48,32,18,33],[48,33,18,33,"UnavailabilityError"],[48,52,18,33],[48,53,18,34],[48,62,18,43],[48,64,18,45],[48,83,18,64],[48,84,18,65],[49,4,19,2],[50,4,20,2],[50,10,20,8,"ExpoHaptics"],[50,21,20,19],[50,22,20,19,"default"],[50,29,20,19],[50,30,20,20,"notificationAsync"],[50,47,20,37],[50,48,20,38,"type"],[50,52,20,42],[50,53,20,43],[51,2,21,0],[53,2,23,0],[54,2,24,0],[55,0,25,0],[56,0,26,0],[57,0,27,0],[58,0,28,0],[59,0,29,0],[60,2,30,7],[60,17,30,22,"impactAsync"],[60,28,30,33,"impactAsync"],[60,29,31,2,"style"],[60,34,31,28],[60,37,31,31,"ImpactFeedbackStyle"],[60,50,31,50],[60,51,31,50,"ImpactFeedbackStyle"],[60,70,31,50],[60,71,31,51,"Medium"],[60,77,31,57],[60,79,32,17],[61,4,33,2],[61,8,33,6],[61,9,33,7,"ExpoHaptics"],[61,20,33,18],[61,21,33,18,"default"],[61,28,33,18],[61,30,33,20,"impactAsync"],[61,41,33,31],[61,43,33,33],[62,6,34,4],[62,12,34,10],[62,16,34,14,"UnavailabilityError"],[62,32,34,33],[62,33,34,33,"UnavailabilityError"],[62,52,34,33],[62,53,34,34],[62,61,34,42],[62,63,34,44],[62,76,34,57],[62,77,34,58],[63,4,35,2],[64,4,36,2],[64,10,36,8,"ExpoHaptics"],[64,21,36,19],[64,22,36,19,"default"],[64,29,36,19],[64,30,36,20,"impactAsync"],[64,41,36,31],[64,42,36,32,"style"],[64,47,36,37],[64,48,36,38],[65,2,37,0],[67,2,39,0],[68,2,40,0],[69,0,41,0],[70,0,42,0],[71,0,43,0],[72,2,44,7],[72,17,44,22,"selectionAsync"],[72,31,44,36,"selectionAsync"],[72,32,44,36],[72,34,44,54],[73,4,45,2],[73,8,45,6],[73,9,45,7,"ExpoHaptics"],[73,20,45,18],[73,21,45,18,"default"],[73,28,45,18],[73,30,45,20,"selectionAsync"],[73,44,45,34],[73,46,45,36],[74,6,46,4],[74,12,46,10],[74,16,46,14,"UnavailabilityError"],[74,32,46,33],[74,33,46,33,"UnavailabilityError"],[74,52,46,33],[74,53,46,34],[74,61,46,42],[74,63,46,44],[74,79,46,60],[74,80,46,61],[75,4,47,2],[76,4,48,2],[76,10,48,8,"ExpoHaptics"],[76,21,48,19],[76,22,48,19,"default"],[76,29,48,19],[76,30,48,20,"selectionAsync"],[76,44,48,34],[76,45,48,35],[76,46,48,36],[77,2,49,0],[79,2,51,0],[80,0,52,0],[81,0,53,0],[82,0,54,0],[83,0,55,0],[84,2,56,7],[84,17,56,22,"performAndroidHapticsAsync"],[84,43,56,48,"performAndroidHapticsAsync"],[84,44,56,49,"type"],[84,48,56,69],[84,50,56,71],[85,4,57,2],[85,8,57,6,"Platform"],[85,24,57,14],[85,25,57,14,"Platform"],[85,33,57,14],[85,34,57,15,"OS"],[85,36,57,17],[85,41,57,22],[85,50,57,31],[85,52,57,33],[86,6,58,4],[87,4,59,2],[88,4,60,2,"ExpoHaptics"],[88,15,60,13],[88,16,60,13,"default"],[88,23,60,13],[88,24,60,14,"performHapticsAsync"],[88,43,60,33],[88,44,60,34,"type"],[88,48,60,38],[88,49,60,39],[89,2,61,0],[90,0,61,1],[90,3]],"functionMap":{"names":["<global>","notificationAsync","impactAsync","selectionAsync","performAndroidHapticsAsync"],"mappings":"AAA;OCa;CDO;OES;CFO;OGO;CHK;OIO;CJK"},"hasCjsExports":false},"type":"js/module"}]}